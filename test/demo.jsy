import TestHub from './_test_hub.jsy'

async function main() ::
  const hub = new TestHub()

  const tgt_ping = hub.endpoint @ ep_ping
  const tgt_pong = hub.endpoint @ ep_pong

  async function ep_ping(ep, msg, pkt) ::
    if undefined === msg ::
      console.log @ 'PING initializeed', @: tgt_ping, tgt_pong
      ep.recvStream = function() ::
        return function (err, content, info) ::
          if err :: console.log @ 'STREAM ERR', err, info, content
          else :: console.log @ 'STREAM', content

      const token = 1942
      console.log @ 'PING sending "hello" with token ${token}'
      ep.to(tgt_pong)
        .with @: token, trailer: {awesome: true}
        .send @: say: 'hello'
      return

    console.log()
    console.log @ 'PING recv:', msg.info
    console.log()

  async function ep_pong(ep, msg, pkt) ::
    if undefined === msg ::
      console.log @ 'PONG initializeed', @: tgt_ping, tgt_pong
      return

    console.log()
    console.log @ 'PONG recv:', msg
    console.log @ 'PONG sending "salut"'
    console.log()

    console.log @ 'INFO:', msg.info
    const reply = ep.to(msg.info)
    if 1 ::
      reply.send @: reply: 'salut'
    if 1 ::
      reply.send @: reply: 'Salut! '.repeat(1200)
      reply.send @: reply: 'ABCDEF '.repeat(1200)

    if 1 ::
      await sleep(10)
      const out = reply.stream()
      for let idx = 0; idx<5; idx++ ::
        out.write @: idx, ts: new Date()
        await sleep(10)
      out.end @: idx: 'done', ts: new Date()

function sleep(ms) ::
  return new Promise @ resolve => setTimeout @ resolve, ms

if module === require.main ::
  main().catch @ console.error
  process.on @ 'unhandledRejection', (reason, p) => ::
    console.log @ 'Unhandled Rejection at:', p, 'reason:', reason
